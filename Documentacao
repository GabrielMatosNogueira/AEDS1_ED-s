/*
Nome do Programa:   ED04
Data:               18/03/2025
Nome:               Gabriel Matos Nogueira
Codigo de Pessoa:   1563147
Matricula:          870863
Versao:             1.0

---------------------------------------------------------------------------------------------------

Como executar o programa no terminal:
1.0 - Certifique-se que o compilador MINGW esteja instalado e presente nas variaveis de ambiente 
da sua maquina

2.0 - Adentre a pasta para executar o programa:
cd 1563147_Gabriel_Matos_Nogueira (Windows, Linux e macOS)

    2.1 - Compile o programa
    Windows:    gcc -o ED04 ED04.c
    Linux:      gcc -o ED04 ED04.c
    macOS:      gcc -o ED04 ED04.c


    2.2 - Execute o programa
    Windows:    ED04
    Linux:      ./ED04
    macOS:      ./ED04

---------------------------------------------------------------------------------------------------
*/

// Declaracao de biblioteca(s)
#include "io.h"

// Declaracao dos metodos utilizados
void method_00();
void method_01();
void method_02();
void method_03();
void method_04();
void method_05();
void method_06();
void method_07();
void method_08();
void method_09();
void method_10();
void method_11();
void method_12();


// Funcao Principal
int main (void)
{
    // armazenar a opcao do usuario
    int opcao=0;
    IO_id("\n\tED04");

    IO_print("\n0 - Parar");
    IO_print("\n1 - ");
    IO_print("\n2 - ");
    IO_print("\n3 - ");
    IO_print("\n4 - ");
    IO_print("\n5 - ");
    IO_print("\n6 - ");
    IO_print("\n7 - ");
    IO_print("\n8 - ");
    IO_print("\n9 - ");
    IO_print("\n10 - ");
    IO_print("\n11 - ");
    IO_print("\n12 - ");

    IO_print("\nDigite uma opcao: ");
    opcao=IO_readint;

    // Menu de opcoes do usuario
    switch(opcao)
    {
        case 0:
        method_00();
        break;

        case 1:
        method_01();
        break;

        case 2:
        method_02();
        break;

        case 3:
        method_03();
        break;

        case 4:
        method_04();
        break;

        case 5:
        method_05();
        break;

        case 6:
        method_06();
        break;

        case 7:
        method_07();
        break;

        case 8:
        method_08();
        break;

        case 9:
        method_09();
        break;

        case 10:
        method_10();
        break;

        case 11:
        method_11();
        break;

        case 12:
        method_12();
        break;
    }
}

// Funcoes do programa

void method_00(void)
{
    // identificar
    printf("%s\n", "\nMetodo 00\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_01(void)
{
    // identificar
    printf("%s\n", "\nMetodo 01\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_02(void)
{
    // identificar
    printf("%s\n", "\nMetodo 02\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_03(void)
{
    // identificar
    printf("%s\n", "\nMetodo 03\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_04(void)
{
    // identificar
    printf("%s\n", "\nMetodo 04\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_05(void)
{
    // identificar
    printf("%s\n", "\nMetodo 05\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_06(void)
{
    // identificar
    printf("%s\n", "\nMetodo 06\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_07(void)
{
    // identificar
    printf("%s\n", "\nMetodo 07\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_08(void)
{
    // identificar
    printf("%s\n", "\nMetodo 08\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_09(void)
{
    // identificar
    printf("%s\n", "\nMetodo 09\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_10(void)
{
    // identificar
    printf("%s\n", "\nMetodo 10\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_11(void)
{
    // identificar
    printf("%s\n", "\nMetodo 11\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

void method_12(void)
{
    // identificar
    printf("%s\n", "\nMetodo 12\n");
    // encerrar
    printf("%s\n", "\nApertar ENTER para continuar\n");
    getchar();
}

/*-------------------------------------------------------------------------------------------------
DOCUMENTACAO
/*-------------------------------------------------------------------------------------------------

1.0 - DOCUMENTACAO COMPLEMENTAR

- Sem observacoes

---------------------------------------------------------------------------------------------------

2.0 - TESTES

*Method_00: OK
- Sem observacoes

*Method_01:
-

*Method_02:
-

*Method_03:
-

*Method_04:
-

*Method_05:
-

*Method_06:
-

*Method_07:
-

*Method_08:
-

*Method_09:
-

*Method_10:
-

*Method_11:
-

*Method_12:
-
---------------------------------------------------------------------------------------------------


*/
